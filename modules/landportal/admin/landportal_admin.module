<?php
/**
 * Provide facilities to manage the Land Portal
 */
include_once 'landportal_admin.views_default.inc';

/**
 * Add a 'Manage' tab to Admin > structure > taxonomy page
 */
function landportal_admin_menu() {
  /* // Geography stuff */
  /* $items['admin/structure/taxonomy/geo/count'] = array( */
  /*   'title' => 'Geo', */
  /*   'type' => MENU_LOCAL_ACTION, */
  /*   'access arguments' => array('administer taxonomy'), */
  /*   'callback' => 'systems_view_data', */
  /*   'weight' => 10, */
  /* ); */
  /* $items['admin/structure/taxonomy/geo/library'] = array( */
  /*   'title' => 'Geo LLR', */
  /*   'type' => MENU_LOCAL_ACTION, */
  /*   'access arguments' => array('administer taxonomy'), */
  /*   'callback' => 'systems_view_data', */
  /*   'weight' => 11, */
  /* ); */
  /* $items['admin/structure/taxonomy/geo'] = array( */
  /*   'title' => 'Geography', */
  /*   'type' => MENU_NORMAL_ITEM, */
  /*   'access arguments' => array('administer taxonomy'), */
  /*   'weight' => 12, */
  /*   'callback' => 'systems_view_data', */
  /* ); */
  $items['admin/structure/taxonomy/geo'] = array(
    'title' => 'Geography',
    'type' => MENU_LOCAL_TASK,
    'access arguments' => array('administer taxonomy'),
    'weight' => 13,
    'callback' => 'systems_view_data',
  );

  // Land Voc
  $items['admin/structure/taxonomy/terms/overarching-categories'] = array(
    'title' => 'Overarching Categories',
    'type' => MENU_LOCAL_TASK,
    'access arguments' => array('administer taxonomy'),
    'weight' => 20,
    'callback' => 'systems_view_data',
    'page arguments' => array('admin/structure/taxonomy/terms/overarching-categories'),
  );
  $items['admin/structure/taxonomy/terms/themes'] = array(
    'title' => 'Themes',
    'type' => MENU_LOCAL_TASK,
    'access arguments' => array('administer taxonomy'),
    'weight' => 21,
    'callback' => 'systems_view_data',
    'page arguments' => array('admin/structure/taxonomy/terms/themes'),
  );
  $items['admin/structure/taxonomy/terms/topics'] = array(
    'title' => 'Concepts',
    'type' => MENU_LOCAL_TASK,
    'access arguments' => array('administer taxonomy'),
    'weight' => 22,
    'callback' => 'systems_view_data',
    //'page callback' => 'node_page_view',//admin_views_taxonomy_terms_topics',
    'page arguments' => array('admin/structure/taxonomy/terms/topics'),
  );	

  // People / User stuff
  $items['admin/people/moderate'] = array(
    'title' => 'Pending account',
    'type' => MENU_LOCAL_TASK,
    'access arguments' => array('administer users'),
    'weight' => 9,
    //'page callback' => 'XXX_admin_view_XXX',
  );
  return $items;
}

function landportal_admin_default_rules_configuration() {
    $config = array();
    
    $rules_path = dirname(__FILE__) . '/rules';
    $files = file_scan_directory($rules_path, '/\.inc$/');
    foreach ($files as $filepath => $file) {
        require $filepath;
        if (isset($rule)) {
          //error_log('RULES: ' . $file->name);
            $config[$file->name] = rules_import($rule);
        }
    }
    //dpm($config);
    return $config;
}

function landportal_admin_mail_alter(&$message) {
  /* // From : https://api.drupal.org/comment/60157#comment-60157 */
  /* $default_from = variable_get('site_mail', ini_get('sendmail_from')); */
  /* if($message['from'] == $default_from){ */
  /*   $message['from'] = '"'. variable_get('site_name', 'Drupal') .'" <'. $default_from .'>'; */
  /*   $message['headers']['From'] = $message['headers']['Sender'] */
  /*     = $message['headers']['Return-Path'] = $message['headers']['Errors-To'] */
  /*     = $message['headers']['Reply-To'] = $message['from']; */
  /* } */
  /* // Don't send email */
  /* $message['send'] = FALSE; */
  /* // Next: Log the mail so it can be debugged if necessary */
  /* watchdog('Development Env', 'The following email was not sent: !message', array('!message' => '<pre>' . print_r($message, TRUE) . '</pre>')); */
}

define ('ROLE_ADMINISTRATOR', 30037204);
define ('ROLE_LANDPORTAL',    111903910);
define ('ROLE_CONTRIBUTOR',   111903911);

function landportal_admin_form_alter(&$form, &$form_state, $form_id) {
  // Hide custom CSS (for admin mostly)
  global $theme;
  if ($theme != 'lpbs') {
    $form['#attached']['css'][] = drupal_get_path('module', 'landportal_admin') . '/admin-form.css';
  }

  if (!isset($form['#fieldgroups'])) return;
  // Hide group_admin and non-required fields
  if (!(user_has_role(ROLE_LANDPORTAL) || user_has_role(ROLE_ADMINISTRATOR))) {
    if (isset($form['#fieldgroups']['group_admin'])) {
      foreach($form['#fieldgroups']['group_admin']->children as $c) {
        $i = &$form[$c];
        if (isset($i['#language']) && isset($i[$i['#language']]['#required'])) {
          $i['#access'] = FALSE;
        }
      }
      $form['#fieldgroups']['group_admin']->format_type = 'hiddem';
    }
  }
}

function landportal_admin_field_widget_properties_node_alter(&$widget, $context) {
  if (!in_array($context['field']['field_name'], array(
    'field_geographical_focus', 'field_related_domains', 'field_related_topics'))) return;
  //return ;
  // Force field to render as a select input
  if ($context['field']['field_name'] == 'field_geographical_focus') {
    $widget['module'] = 'options';
    $widget['type'] = 'options_select';
    //dpm($context, 'C');
    //dpm($widget, 'W');
  }
}
