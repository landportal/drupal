<?php
/**
 * Provide facilities to manage the Land Portal
 */
include_once 'landportal_admin.views_default.inc';
/**
 * Add a 'Manage' tab to Admin > structure > taxonomy page
 */
function landportal_admin_menu() {
    /* $items['admin/structure/taxonomy/terms'] = array( */
    /*     'title' => 'Manage terms', */
    /*     'type' => MENU_LOCAL_TASK, */
    /*     'access arguments' => array('administer taxonomy'), */
    /*     'weight' => 12, */
    /* ); */
    $items['admin/structure/taxonomy/terms/overarching-categories'] = array(
        'title' => 'Manage Overarching Categories',
        'type' => MENU_LOCAL_TASK,
        'access arguments' => array('administer taxonomy'),
        'weight' => 10,
        'callback' => 'systems_view_data',
        'page arguments' => array('admin/structure/taxonomy/terms/overarching-categories'),
    );
    $items['admin/structure/taxonomy/terms/themes'] = array(
        'title' => 'Manage Themes',
        'type' => MENU_LOCAL_TASK,
        'access arguments' => array('administer taxonomy'),
        'weight' => 10,
        'callback' => 'systems_view_data',
        'page arguments' => array('admin/structure/taxonomy/terms/themes'),
    );
    $items['admin/structure/taxonomy/terms/topics'] = array(
        'title' => 'Manage LandVoc Concepts',
        'type' => MENU_LOCAL_TASK,
        'access arguments' => array('administer taxonomy'),
        'weight' => 10,
        'callback' => 'systems_view_data',
        //'page callback' => 'node_page_view',//admin_views_taxonomy_terms_topics',
        'page arguments' => array('admin/structure/taxonomy/terms/topics'),
    );	
    $items['admin/structure/taxonomy/terms/regions'] = array(
        'title' => 'Manage Regions',
        'type' => MENU_LOCAL_TASK,
        'access arguments' => array('administer taxonomy'),
        'weight' => 10,
        'callback' => 'systems_view_data',
        //'page callback' => 'admin_views_taxonomy_terms_regions',
        'page arguments' => array('admin/structure/taxonomy/terms/regions'),
    );
    $items['admin/people/moderate'] = array(
        'title' => 'Pending account',
        'type' => MENU_LOCAL_TASK,
        'access arguments' => array('administer users'),
        'weight' => 9,
        //'page callback' => 'XXX_admin_view_XXX',
    );
    return $items;
}

function landportal_admin_default_rules_configuration() {
    $config = array();
    
    $rules_path = dirname(__FILE__) . '/rules';
    $files = file_scan_directory($rules_path, '/\.inc$/');
    foreach ($files as $filepath => $file) {
        require $filepath;
        if (isset($rule)) {
          //error_log('RULES: ' . $file->name);
            $config[$file->name] = rules_import($rule);
        }
    }
    //dpm($config);
    return $config;
}


function landportal_admin_mail_alter(&$message) {

  // From : https://api.drupal.org/comment/60157#comment-60157
  $default_from = variable_get('site_mail', ini_get('sendmail_from'));
  if($message['from'] == $default_from){
    $message['from'] = '"'. variable_get('site_name', 'Drupal') .'" <'. $default_from .'>';
    $message['headers']['From'] = $message['headers']['Sender']
      = $message['headers']['Return-Path'] = $message['headers']['Errors-To']
      = $message['headers']['Reply-To'] = $message['from'];
  }

  /* // Don't send email */
  /* $message['send'] = FALSE; */
  /* // Next: Log the mail so it can be debugged if necessary */
  /* watchdog('Development Env', 'The following email was not sent: !message', array('!message' => '<pre>' . print_r($message, TRUE) . '</pre>')); */
}
