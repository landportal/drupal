<?php
/**
 * Land Portal menus
 *
 * Author: Jules <jules@ker.bz>
 */

include_once 'landportal_menus.import.inc';

/**
 * Implementation of hook_menu_insert().
 */
// Should be call on each landportal-menu 'flush' / reload
function landportal_menus_menu_insert($menu) {
  landportal_menus_import_menu($menu);
  // menu_cache_clear_all();
  //landportal_menus_map_cts($menu);
}

function landportal_menus_map_cts($menu) {
  if ($menu['menu_name'] != 'landportal-menu') return;
  $nb = db_delete('menu_position_rules')
    ->condition('menu_name', 'landportal-menu')
    ->condition('machine_name', 'ct_%', 'LIKE')
    ->execute();

  module_load_include('inc', 'menu_position', 'menu_position.admin');
  $map = array(
    'landlibrary_resource' => 'library',
    'news' => 'news-events',
    'event' => 'news-events',
    'debate' => 'debate/debates',
    'blog_post' => 'news-events',
    'organization' => 'debate/community',
    'partners' => 'debate/community',
    'project' => 'debate/community',
    'dataset' => 'book/data',
    'landbook_country' => 'book/countries',
    'thematic_narrative' => 'book/thematic',
    'sdgi' => 'book/thematic', // @todo SDG cover + about page
  );
  foreach(array('en', 'fr', 'es', 'pt') as $langcode) {
  //foreach(array('en') as $langcode) {
    foreach($map as $ct => $path) {
      landportal_menus_bind_cts($ct, $path, $langcode);
    }
  }
}

// Create the association between landportal-menu top items and CTs
function landportal_menus_bind_cts($ctype, $path, $langcode) {
  $qlink = db_select('url_alias', 'url');
  $qlink->join(
    'menu_links', 'menu',
    'menu.link_path = url.source AND menu.menu_name = :menun',
    array(':menun' => 'landportal-menu')
  );
  $qlink->fields('url', array('source', 'language'))
        ->fields('menu', array('mlid', 'plid'))
        ->condition('alias', $path);

  // Build up menu links + rule
  $rule = array(
    'admin_title' => 'CT ' . $ctype,
    'machine_name' => 'ct_' . $ctype,
    'conditions' => array(
      'content_type' => array(
        'content_type' => array(
          $ctype => $ctype
        ),
      ),
    ),
    'menu_name' => 'landportal-menu',
  );
  if ($langcode != 'en' ) {
    $rule['language'] = array(
      'language' => array($langcode)
    );
    $rule['admin_title'] = '[' . $langcode . '] ' . $rule['admin_title'];
    $rule['machine_name'] .= '_' . $langcode;
    $qlink->condition('url.language', $langcode);
  /* } else { */
  /*   $langcode = NULL; */
  }
  $link = $qlink->execute()->fetchAssoc();
  if (!count($link) || !$link['mlid']) {
    print "NO link\n";
    print_r($link);
    return FALSE;
  }
  print 'Remap [' .$langcode . '] ' . $ctype . ' to ' . $path . ' #' . $link['mlid'] . "\n";
  $rule += array(
    'plid' => $link['mlid'], // bind new item to parent
    'mlid' => NULL, // create a new link (see: menu_position_add_menu_link)
    //$result['mlid'],
  );
  //print_r($rule);
    // By calling menu_position_add_rule() here, we're assuming that this exact rule does not exist
  menu_position_add_rule($rule);
  return TRUE;
}
