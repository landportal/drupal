<?php
/**
 * @file
 * Code for the Landbook Country feature.
 */

include_once 'landbook_country.features.inc';

/**
 * Implements hook_node_view().
 *
 * For Country narrative pages (node landbook_country, view_mode full)
 * - Provide an iso3 to Drupal JS settings (mainly for VGGT / LGAF blocks)
 * - Attach an Internal page menu to group_header (see landportal_blocks)
 *
 */
function landbook_country_node_view($node, $view_mode, $langcode) {
  if ($node->type != 'landbook_country' || $view_mode != 'full') return;

  $term = $node->field_geographical_focus[LANGUAGE_NONE][0]['entity'];
  $iso3 = $term->field_iso3[LANGUAGE_NONE][0]['value'];
  drupal_add_js(array('iso3' => $iso3), 'setting');

  // Breadcrumbs
  $display_settings = taxonomy_display_fetch_taxonomy_display($term->vocabulary_machine_name);
  $breadcrumb_display = new $display_settings->breadcrumb_display_plugin;
  $breadcrumb_display->buildBreadcrumb($term);
  menu_tree_set_path('landportal-menu', 'node/14170'); // @todo should be something with alias + lang

  // @TODO: 'simply' have this hack as a block on the whole LP
  $node->content['group_header']['#attached'] = array(
    'js' => array(array(
      'type' => 'inline',
      'data' => landportal_blocks_page_submenu()
    ))
  );
  $node->content['group_header']['#suffix'] = '<div id="page-submenu"><ul class="nav"></ul></div>';
}

/**
 * Implements hook_theme().
 */
function landbook_country_menu() {
  $items = array();
  $items['book/countries/%'] = array(
    //'title'           => 'Land Portal Country portfolio',
    //'type'            => MENU_CALLBACK,
    /* 'title callback'   => 'landbook_country_title', */
    /* 'title arguments'  => array(2), */
    'page callback'   => 'landbook_country_page',
    'page arguments'  => array(2),
    'access callback' => TRUE,//array('access content'),
    'module'          => 'landbook_country',
  );
  /* $items['countries/%term'] = array( */
  /*   'title'           => 'Land Portal Country', */
  /*   'type'            => MENU_CALLBACK, */
  /*   'access callback' => array('access content'), */
  /*   'page callback'   => 'landbook_countries_page', */
  /*   'page arguments'  => array(2), */
  /*   //'module'          => 'taxonomy', */
  /* ); */
  return $items;
}

// Render either a Country Narrative (node) or the Country term (taxonomy term)
function landbook_country_page($iso3) {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'taxonomy_term')
        ->entityCondition('bundle', 'regions')
        ->fieldCondition('field_iso3', 'value', $iso3, '=');
  $result = $query->execute();
  $tid = array_keys($result['taxonomy_term'])[0];
  // For now let's cut the crap and simply send the use to the term page
  return drupal_goto(drupal_get_path_alias('taxonomy/term/' . $tid));
}

// THEN, all this is DEPRECATED!

/* dpm(arg(), 'CP CB ' . $iso3 . ' #' . $tid); */
/* $term = taxonomy_term_load($tid); */
/* return taxonomy_display_taxonomy_term_page($term); */

/* if (@($last = landbook_country__get_latest($tid))) { */
/*   //dpm($last); */
/*   $node = node_load($last); */
/*   return node_page_view($node); */
/* } */

/* // Helper to get the latest Country narrative */
/* function landbook_country__get_latest($tid) { */
/*   $query = new EntityFieldQuery(); */
/*   $query->entityCondition('entity_type', 'node') */
/*         ->entityCondition('bundle', 'landbook_country') */
/*         ->fieldCondition('field_geographical_focus', 'tid', $tid, '=') */
/*         ->range(0, 1) */
/*         ->propertyOrderBy('created', 'DESC'); */
/*   $result = $query->execute(); */
/*   if ($result) { */
/*     $last = array_keys($result['node'])[0]; */
/*     return $last; */
/*   } */
/*   return null; */
/* } */

/* // If we have a latest CT dataset, replace tax. dataset page with it */
/* function landbook_country_page_build(&$page) { */
/*   //dpm($page, 'pbuild'); */
/*   /\* if (@($term = $page['content']['system_main']['term_heading']['term']['#term'])) { *\/ */
/*   /\*   if ($term->vocabulary_machine_name != 'regions') return; *\/ */
/*   /\*   $iso3 = $term->field_iso3[LANGUAGE_NONE][0]['value']; *\/ */
/*   /\*   drupal_add_js(array('iso3' => $iso3), 'setting'); *\/ */
/*   /\* } *\/ */
/* } */

/* // Render either a Country Narrative (node) or the Country term (taxonomy term) */
/* function landbook_countries_page($term) { */
/*   dpm($term, 'CC'); */
/* } */

/* function landbook_country_menu_alter(&$items) { */
/*   dpm($items['taxonomy/term/%taxonomy_term'], 'TT'); */
/* } */

/* // Add the edit link to landbook_country pages */
/* function landbook_country_preprocess(&$variables, $hook) { */
/*   // Only for user that can administrer nodes */
/*   if (user_access('administer nodes')) { */
/*     if ($hook == 'page' && @($nodes = $variables['page']['content']['system_main']['nodes'])) { */
/*       $nid = array_keys($nodes)[0]; */
/*       if ($nodes[$nid]['#bundle'] == 'landbook_country' && !$variables['tabs']['#primary']) { */
/*         // dpm($variables['tabs']['#primary']); */
/*         $variables['tabs']['#primary'][] = array( */
/*           '#markup' => '<li>' . l('View', 'node/' . $nid ) . '</li>', */
/*         ); */
/*         $variables['tabs']['#primary'][] = array( */
/*           '#markup' => '<li>' . l('Edit', 'node/' . $nid . '/edit') . '</li>', */
/*         ); */
/*       } */
/*     } */
/*   } */
/* } */
