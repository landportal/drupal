<?php
/**
 * @file
 * Code for the Landbook Country feature.
 */

include_once 'landbook_country.features.inc';

// @TODO: hook tax. term page display / redirect to book/countries/[ISO3]

// @todo: also do this on term page load?
function landbook_country_node_view($node, $view_mode, $langcode) {
  // PRovide a drupal JS var
  if ($node->type == 'landbook_country') {
    $geo = $node->field_geographical_focus[LANGUAGE_NONE][0]['entity'];
    $iso3 = $geo->field_iso3[LANGUAGE_NONE][0]['value'];
    drupal_add_js(array('iso3' => $iso3), 'setting');
  }

  // @TODO: 'simply' have this hack as a block on the whole LP
  if ($node->type == 'landbook_country' && $view_mode == 'full') {
    // Add page-internal menu
    $node->content['group_header']['#attached'] = array(
      'js' => array(array(
        'type' => 'inline',
        'data' => landportal_blocks_page_submenu()
      ))
    );
    $node->content['group_header']['#suffix'] = '<div id="page-submenu"><ul class="nav"></ul></div>';
  }
}



/**
 * Implements hook_theme().
 */
function landbook_country_menu() {
  $items = array();
  // Create hook for Country narrative pages
  $items['book/countries/%'] = array(
    'title'           => 'Land Portal Country portfolio',
    'type'            => MENU_CALLBACK,
    'access callback' => TRUE,
    'page callback'   => 'landbook_country_page',
    'page arguments'  => array(2),
  );
  return $items;
}

// Render either a Country Narrative (node) or the Country term (taxonomy term)
function landbook_country_page($iso3) {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'taxonomy_term')
        ->entityCondition('bundle', 'regions')
        ->fieldCondition('field_iso3', 'value', $iso3, '=');
  $result = $query->execute();
  $tid = array_keys($result['taxonomy_term'])[0];

  // Search for Country narrative (landbook_country)
  $cp = new EntityFieldQuery();
  $cp->entityCondition('entity_type', 'node')
     ->entityCondition('bundle', 'landbook_country')
     ->fieldCondition('field_geographical_focus', 'tid', $tid, '=');
  $cpresult = $cp->execute();
  if ($cpresult) {
    $nid = array_keys($cpresult['node'])[0];
    $node = node_load($nid);
    return node_page_view($node);
  } else {
    $term = taxonomy_term_load($tid);
    return taxonomy_term_view($term, 'full');
  }
}

// Add the edit link to landbook_country pages
function landbook_country_preprocess(&$variables, $hook) {
  // Only for user that can administrer nodes
  if (user_access('administer nodes')) {
    if ($hook == 'page' && @($nodes = $variables['page']['content']['system_main']['nodes'])) {
      $nid = array_keys($nodes)[0];
      if ($nodes[$nid]['#bundle'] == 'landbook_country' && !$variables['tabs']['#primary']) {
        // dpm($variables['tabs']['#primary']);
        $variables['tabs']['#primary'][] = array(
          '#markup' => '<li>' . l('View', 'node/' . $nid ) . '</li>',
        );
        $variables['tabs']['#primary'][] = array(
          '#markup' => '<li>' . l('Edit', 'node/' . $nid . '/edit') . '</li>',
        );
      }
    }
  }
}
