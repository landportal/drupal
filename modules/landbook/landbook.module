<?php
use mikehaertl\wkhtmlto\Pdf;
/**
 * @file
 * This module provide an interface to the landbook section of the Landportal.
 *
 * The Landportal landbook
 *
 * Drupal refactoring: Jules <jules@ker.bz>
 */

$BOOK_PATH = drupal_get_path('module', 'landbook');
require_once($BOOK_PATH . '/includes/landbook.block.inc');
require_once($BOOK_PATH . '/includes/landbook.context.inc');
require_once($BOOK_PATH . '/includes/landbook.menu.inc');
require_once($BOOK_PATH . '/includes/landbook.theme.inc');
require_once($BOOK_PATH . '/includes/landbook.views_default.inc');


/**
 * Implements hook_ctools_plugin_api().
 */
function landbook_ctools_plugin_api($module = NULL, $api = NULL) {
    if ($module == "context" && $api == "context") {
        return array("version" => "3");
    }
}

function landbook_views_api($module = NULL, $api = NULL) {
  return array("api" => "3.0");
}

function landbook_help($path, $arg) {
  switch ($path) {
  case "admin/help#landbook":
    return '<p>' . t("Landbook section of the Landportal") . '</p>'
      . '<p>' . t("It provides differents menus, block, pages and hooks plus a few configuration pages"). '</p>'
      . '<p>' . t("The Landbook is composed of different modules: catalog, countries, indicators, regions, reuse, sources, widgets") . '</p>'
      . '<p>' . t("Each submodule comes with some JS to allow dynamic actions and template(s) for main content and eventually sidebars elements.") . '</p>'
      . '<p>' . t("This module also provides ajax ready pages (which output some JSON, see: ajax/) for JS callbacks.") . '</p>'
      ;
    break;
  }
}

/**
 * Landbook pages hook
 */
function landbook_page_build(&$page) {
    // Country pages (aka naratives)
    if (arg(0) == 'book' && arg(1) == 'countries') {
        landbook_country_narrative(arg(2));
    }

    if (arg(0) == 'book' && arg(1) == 'countries' && arg(3) == 'pdf') {
        if (($library = libraries_load('phpwkhtmltopdf')) && !empty($library['loaded'])) {
            drupal_add_css(path_to_theme() . '/css/printpdf.css', array('group' => CSS_THEME, 'weight' => 115, 'preprocess' => TRUE,'media'=>'print'));
            $pdf = new Pdf();
            $pdf->binary = '/usr/local/bin/wkhtmltopdf';
            $pdf->setOptions(array(
                'page-size'=>'A4',
                'javascript-delay' => 10000,
                'margin-top'=>10,
                'margin-left'=>0,
                'margin-right'=>0,
                'margin-bottom'=>'1cm',
                'user-style-sheet'=>path_to_theme() . '/css/printpdf.css',
            ));
            $url='http://'.$_SERVER['HTTP_HOST'].'/'.str_replace('/pdf','',current_path());
            $pageOptions = array(
                'enable-javascript',
                'no-stop-slow-scripts',
                'debug-javascript',
                'print-media-type'
    
 
              );
             $pdf->addPage($url,$pageOptions);
            //$pdf->saveAs('/usr/local/www/drupal7.dev/landportal/sites/default/files/'.arg(2).'.pdf');
            //$pdf->saveAs('/tmp/'.arg(2).'.pdf');
            //$pdf->send();
            $pdf->send(arg(2).'.pdf');
        }
    }
}

function landbook_taxonomy_term_view($term, $view_mode, $langcode) {
    if (!in_array($term->vocabulary_machine_name, array('indicators', 'catalogs')))
        return;
    drupal_add_js(array(
        'landbook' => array(
            'type' => $term->vocabulary_machine_name,
            'id'   => $term->field_id['und'][0]['value']
        )
    ), 'setting');
}

function landbook_country_narrative($iso3) {
    global $LBVIS_PATH;
    $LBVIS_PATH = base_path() . 'sites/all/libraries/lbvis';
    // TODO: should be added by hook_library while declaring view-coda (aka lbvis)
    // TODO: add css with #attached (see vis_map module)
    drupal_add_css($LBVIS_PATH . '/css/screen.css', array('group' => CSS_DEFAULT));
    drupal_add_css($LBVIS_PATH . '/css/spinkit.css', array('group' => CSS_DEFAULT));
    drupal_add_js(array(
        'landbook' => array(
            //'path'          => $theme_path,
            'libraryPath'   => $LBVIS_PATH,
            'countryCode'   => $iso3
        )
    ), 'setting');
}

/**
 * Note: Webcoding
 * Explain AND document all the following functions
 * most of it seems overkill, un-necessary
 */
function landbook_views_query_alter(&$view, &$query){
    if(!empty($view->name) && $view->name=='landbook_countries_related'){
        if(arg(0)=='book' && arg(1) == 'countries'){
            if($view->current_display != 'block_6'){
              $tid=landbook_get_region_iso(arg(2));
              $query->where[0]['conditions'][0]['value']=$tid;//pa($query,1);
            }
            // WTF is block6?
            else{
              $tid=landbook_get_country_iso(arg(2));
              // WTFWTF?
              $query->where[1]['conditions'][4]['value']=$tid;
            }
        }
    }
}
// TMP? 
function landbook_get_region_iso($iso){
    $tid = db_select('field_data_field_iso3', 't')
      ->fields('t', array('entity_id'))
      ->condition('t.field_iso3_value', $iso)
      ->condition('t.bundle', 'regions')
      ->execute()
      ->fetchField();
    return $tid;
}
// TMP?
function landbook_get_country_iso($iso){
    $tid = db_select('field_data_field_iso3', 't')
      ->fields('t', array('entity_id'))
      ->condition('t.field_iso3_value', $iso)
      ->condition('t.bundle', 'countries')
      ->execute()
      ->fetchField();
    return $tid;
}

// Un-used?
function landbook_get_country_narrative_nid($title){
  $nid = db_select('node', 'n')
  ->fields('n', array('nid'))
  ->condition('n.title', $title)
  ->condition('n.type', 'landbook_country')
  ->execute()
  ->fetchField();
  return $nid;
}
// Un-used?
function load_country_description($title){
  $nid = db_select('node', 'n')
  ->fields('n', array('nid'))
  ->condition('n.title', $title)
  ->condition('n.type', 'landbook_country')
  ->execute()
  ->fetchField();
  if(empty($nid)){
    return '';
  }
  else{
    $node = node_load($nid);
    $description=node_view($node, 'teaser');
    return $description ;
  }
}

/**
 * Implements hook_views_pre_render().
 */
// WFT is going on there?
function landbook_views_pre_render(&$view) {
  // We target the views and probably the display we want to customize.
  if (!empty($view->name) && $view->name === 'landbook_countries_related' && $view->current_display === 'block_5') {
    // Only act on when the views is set to use "more link".
    if ($view->display_handler->use_more()) {
      $args = arg();
      // Load the term. The argument can be passed by url or panel configuration.
      if (!empty($args[2])) {
        $query = db_select('taxonomy_term_data', 't');
        $query->fields('t', array('tid'));
        $query->leftJoin('field_data_field_iso3', 'fdfi', 'fdfi.entity_id = t.tid');
        $query->condition('fdfi.field_iso3_value', $args[2]);
        $query->condition('t.vid', '7');
        $tid = $query->execute()->fetchField();

        if ($tid) {
          // Set to use 'custom_url'.
          $view->display_handler->set_option('link_display', 'custom_url');

          // Change the link url.

          $view->display_handler->set_option('link_url', 'library/search');
          $view->exposed_raw_input['f[0]'] = 'im_field_geographical_focus:' . $tid;
        }
      }
    }
  }
}


// Implement country promoted stuff
// WTF?
// So this is both here and in land_util(ity?)?
function landbook_form_alter(&$form, &$form_state, $form_id){
  if($form_id == 'news_node_form'  || $form_id == 'blog_post_node_form' || $form_id == 'debate_node_form' || $form_id == 'event_node_form' || $form_id == 'landlibrary_resource_node_form'){
    drupal_add_js(drupal_get_path('module', 'landbook') . '/js/landbook.js');
    $terms=array('0'=>'--None--');
    $countries=taxonomy_get_tree(3);
    foreach ($countries as $country) {
      $terms[$country->tid]=$country->name;
    }
    $default_values=$form['#node']->field_country_promoted['und'];
    foreach ($default_values as $value) {
      $default[]=$value['tid'];
    }
    $form['options']['promoted_nodes']=array(
      '#type'=>'select',
      '#weight'=>6,
      '#options'=>$terms,
      '#multiple'=>TRUE,
      '#default_value'=>$default,
    );
    array_unshift($form['#submit'],'landbook_save_promoted_nodes');
    //unset($form['field_country_promoted']);
    $form['field_country_promoted']['#access']=FALSE;
  }
}
function landbook_save_promoted_nodes(&$form, &$form_state){
  $form_state['values']['field_country_promoted']['und']=array();
  foreach($form_state['values']['promoted_nodes'] as $value){
    $form_state['values']['field_country_promoted']['und'][]['tid']=$value;
  }
}

function landbook_get_narrative(){
    if (arg(0) == 'book' && arg(1) == 'countries') {
        global $language;
        $tid=landbook_get_region_iso(arg(2));
        $term=taxonomy_term_load($tid);
        $node_id=landbook_get_country_narrative_nid($term->name);
        $image='';
        if(!empty($node_id)){
            $node=node_load($node_id);
            $items = field_get_items('node', $node, 'field_orgref');
            if(!empty($items)){
                $item = array_shift($items);
                if(isset($item['entity'])){
                    $items = field_get_items('node', $item['entity'], 'field_image');
                    $url=$items[0]['uri'];
                    $params = array(
                        'style_name' => 'medium',
                        'path' => $url,
                      );
                    $image=theme('image_style', $params);
                }
                else{
                    $image='';
                }
            }
        }
        return $image;
    }
}

function landbook_preprocess_page(&$variables){
    $image=landbook_get_narrative();
    $variables['print_logo_image']='';
    if(!empty($image)){
       $variables['print_logo_image']='<div class="print-organization"><p>'.t('Country page powered by').'</p>'.$image.'</div>';
    }
}