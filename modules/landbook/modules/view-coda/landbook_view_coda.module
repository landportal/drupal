<?php
/**
 * @file
 * Code for the Landbook View Coda feature.
 */

/**
 * This module provides the Land Book visualization
 * It interface with js-view-coda library
 *
 * Author: Jules Clement <jules@landportal.info>
 */

global $_LBVC;
$_LBVC = array();

// LP taxonomies VID: 25 = indicators ; 24 = datasets
define("LBVC_IND_VID", 25);
define("LBVC_CAT_VID", 24);

include_once 'landbook_view_coda.ui.inc';
include_once 'landbook_view_coda.library.inc';
include_once 'landbook_view_coda.indicators.inc';
include_once 'landbook_view_coda.forms.inc';
include_once 'landbook_view_coda.fields.inc';
include_once 'landbook_view_coda.blocks.inc';
include_once 'landbook_view_coda.features.inc';

/**
 * Implements hook_theme().
 */
function landbook_view_coda_theme($existing, $type, $theme, $path) {
  // Scan this directory for template files
  $templates = drupal_find_theme_templates($existing, '.tpl.php', $path);
  return $templates;
}

// Add view-coda  CSS classes to the Visusalization blocks
function landbook_view_coda_preprocess_entity(&$variables, $hook) {
  if ($variables['elements']['#bundle'] == 'field_visualization') {
    $variables['classes_array'][] = 'view-coda';
    if (isset($variables['field_view_coda'][0])) {
      $variables['classes_array'][] = 'view-coda-' . $variables['field_view_coda'][0]['type'];
      $variables['attributes_array']['id'] = 'vc' . $variables['id'];
    }
  }
}

function landbook_view_coda_vis_form($form, &$form_state, $extra) {
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Doit!',
  );
  //$form += $extra;
  return $extra;//$form;
}

function landbook_view_coda_menu() {
  // Create an array of block settings.
  $settings = array(
    'title' => 'Add Visualization block',
    'description' => 'Add a new Visualization block.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('landbook_view_coda_add_block_form'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'landbook_view_coda.admin.inc',
  );

  // Add a local action to the block configuration page.
  $items['admin/structure/block/add-visualization'] = array(
    'access arguments' => array('administer blocks'),
  ) + $settings;

  $items['admin/structure/block/administer/visualization/%/delete'] = array(
    'title' => 'Delete Visualization block',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('landbook_view_coda_block_delete', 5),
    'access arguments' => array('administer blocks'),
    'type' => MENU_CALLBACK,
    'file' => 'landbook_view_coda.admin.inc',
  );

  return $items;
}



/**
 * Helper functions
 */

function lbvc__indicators_obs() {
  return array(
    'cex' => ['value', 'country', 'year'],
    'geo' => ['country'],
    'time' => ['year', 'period'],
    'meta' => [
      'unit', 'highlow', 'codedvalue',
      // computed/infered metadata - based on LOD datapoints?
      'minvalue', 'maxvalue', 'nbobs', 'nbcountries',
      'minyear', 'maxyear', 'nbyears',
    ],
  );
}

function lbvc__plugins_types() {
  return variable_get('lbvc.plugins', array());
}

// on dataset/indicator full or dataset header view mode
function landbook_view_coda_taxonomy_term_view($term, $view_mode, $langcode) {
  if (!in_array($term->vocabulary_machine_name, array('indicators', 'datasets')) || $view_mode == 'teaser')
    return;
  drupal_add_js(array(
    'landbook' => array(
      'type' => substr($term->vocabulary_machine_name, 0, -1),
      'lbid'   => $term->field_id[LANGUAGE_NONE][0]['value'],
    )
  ), 'setting');
}
